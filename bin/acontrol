#!/usr/bin/env python

import sys
import signal
import pyinotify

from acontrol.notify import ControlThread

from acontrol.queue import Queue
from acontrol.observation import Observation

class ObservationHandler(pyinotify.ProcessEvent):
    def __init__(self, queue):
        self.queue = queue

    def process_IN_CLOSE_WRITE(self, event):
        print "Got event ", event
        try:
            obs = Observation(event.pathname)
            self.queue.add(obs)
        except:
            print "Could not read parset from ", event.pathname


def main_loop(path_to_watch):
    queue = Queue()
    threads = [ControlThread(path_to_watch, ObservationHandler(queue))]
    for thread in threads:
        thread.start()

    while threads:
        print "Currently %d obs in queue" % (len(queue),)
        try:
            [t.join(1) for t in threads]
            threads = [t for t in threads if t.isAlive()]
        except KeyboardInterrupt:
            for t in threads:
                t.halt()

if __name__ == "__main__":
    print "AARTFAAC Control System"
    main_loop(sys.argv[1])
